package com.example.rahat;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesClient;
import com.google.android.gms.common.GooglePlayServicesUtil;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentSender;
import android.os.AsyncTask;
import android.os.Bundle;
import android.text.format.Time;
import android.util.Log;
import android.widget.TextView;
import android.widget.Toast;


public class AlarmReceiver extends BroadcastReceiver implements
GooglePlayServicesClient.ConnectionCallbacks,
GooglePlayServicesClient.OnConnectionFailedListener 
{
	private final static int CONNECTION_FAILURE_RESOLUTION_REQUEST = 9000;
	@Override
	public void onReceive(Context context, Intent intent)
	{     
		Log.d("Alarm", "Alarm reached onReceive of separate class");
		//new ClientTask().execute(serverName, port);
		// Show the toast  like in above screen shot
		Toast.makeText(context, "Alarm Triggered and Location Sent", Toast.LENGTH_LONG).show();
	}
	
	@Override
    public void onConnected(Bundle dataBundle) {
        
    }
    /*
	 * Called by Location Services if the connection to the
     * location client drops because of an error.
     */
    @Override
    public void onDisconnected() {
        
    }
    
    /*
     * Called by Location Services if the attempt to
     * Location Services fails.
     */
    @Override
    public void onConnectionFailed(ConnectionResult connectionResult) {
        
    }
    
    /* ClientThread extends AsyncTask to handle sending a location message
     * message is sent to the server specified by (sName, sPort)
     * */    
    public class ClientTask extends AsyncTask<String, Void, String>{
    	
    	protected String doInBackground(String... strings){
    		String sName = strings[0];
    		int sPort = Integer.valueOf(strings[1]);
    		Socket socket;
    		try{    			
    			//get the current time
    			Time now = new Time();
    			now.setToNow();
    			//get location and package it to send
    			String message = packLocation();    			
    			//get server IP and connect to it
    			InetAddress serverAddr = InetAddress.getByName(sName);    			
    			socket = new Socket(serverAddr, sPort);
    			//send the message
    			PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())), true);
    			out.println(message);
    			socket.close();
    			//set the text in the Text View
    			return "Location sent @ " + now.format("%H:%M:%S");
    			
    		} catch(UnknownHostException e1){
    			e1.printStackTrace();
    			return e1.getMessage();
    		} catch (IOException e1){
    			e1.printStackTrace();
    			return e1.getMessage();
    		} catch(Exception e){
    			e.printStackTrace();
    			return e.getMessage();
    		}
    	}
    	protected void onProgressUpdate(){}

    	protected void onPostExecute(String msg){
    	}
    }
}
